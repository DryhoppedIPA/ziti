// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: loop4.proto

package loop4_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Test struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TxRequests       int32  `protobuf:"varint,2,opt,name=txRequests,proto3" json:"txRequests,omitempty"`
	TxPacing         string `protobuf:"bytes,3,opt,name=txPacing,proto3" json:"txPacing,omitempty"`
	TxMaxJitter      string `protobuf:"bytes,4,opt,name=txMaxJitter,proto3" json:"txMaxJitter,omitempty"`
	TxPauseEvery     string `protobuf:"bytes,5,opt,name=txPauseEvery,proto3" json:"txPauseEvery,omitempty"`
	TxPauseFor       string `protobuf:"bytes,6,opt,name=txPauseFor,proto3" json:"txPauseFor,omitempty"`
	TxAfterRx        bool   `protobuf:"varint,19,opt,name=txAfterRx,proto3" json:"txAfterRx,omitempty"`
	RxRequests       int32  `protobuf:"varint,7,opt,name=rxRequests,proto3" json:"rxRequests,omitempty"`
	RxTimeout        int32  `protobuf:"varint,8,opt,name=rxTimeout,proto3" json:"rxTimeout,omitempty"`
	RxPauseEvery     string `protobuf:"bytes,9,opt,name=rxPauseEvery,proto3" json:"rxPauseEvery,omitempty"`
	RxPauseFor       string `protobuf:"bytes,10,opt,name=rxPauseFor,proto3" json:"rxPauseFor,omitempty"`
	PayloadMinBytes  int32  `protobuf:"varint,11,opt,name=payloadMinBytes,proto3" json:"payloadMinBytes,omitempty"`
	PayloadMaxBytes  int32  `protobuf:"varint,12,opt,name=payloadMaxBytes,proto3" json:"payloadMaxBytes,omitempty"`
	LatencyFrequency int32  `protobuf:"varint,13,opt,name=latencyFrequency,proto3" json:"latencyFrequency,omitempty"`
	TxBlockType      string `protobuf:"bytes,14,opt,name=txBlockType,proto3" json:"txBlockType,omitempty"`
	RxBlockType      string `protobuf:"bytes,15,opt,name=rxBlockType,proto3" json:"rxBlockType,omitempty"`
	RxSeqBlockSize   int32  `protobuf:"varint,16,opt,name=rxSeqBlockSize,proto3" json:"rxSeqBlockSize,omitempty"`
	RxPacing         string `protobuf:"bytes,17,opt,name=rxPacing,proto3" json:"rxPacing,omitempty"`
	RxMaxJitter      string `protobuf:"bytes,18,opt,name=rxMaxJitter,proto3" json:"rxMaxJitter,omitempty"`
}

func (x *Test) Reset() {
	*x = Test{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loop4_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_loop4_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_loop4_proto_rawDescGZIP(), []int{0}
}

func (x *Test) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Test) GetTxRequests() int32 {
	if x != nil {
		return x.TxRequests
	}
	return 0
}

func (x *Test) GetTxPacing() string {
	if x != nil {
		return x.TxPacing
	}
	return ""
}

func (x *Test) GetTxMaxJitter() string {
	if x != nil {
		return x.TxMaxJitter
	}
	return ""
}

func (x *Test) GetTxPauseEvery() string {
	if x != nil {
		return x.TxPauseEvery
	}
	return ""
}

func (x *Test) GetTxPauseFor() string {
	if x != nil {
		return x.TxPauseFor
	}
	return ""
}

func (x *Test) GetTxAfterRx() bool {
	if x != nil {
		return x.TxAfterRx
	}
	return false
}

func (x *Test) GetRxRequests() int32 {
	if x != nil {
		return x.RxRequests
	}
	return 0
}

func (x *Test) GetRxTimeout() int32 {
	if x != nil {
		return x.RxTimeout
	}
	return 0
}

func (x *Test) GetRxPauseEvery() string {
	if x != nil {
		return x.RxPauseEvery
	}
	return ""
}

func (x *Test) GetRxPauseFor() string {
	if x != nil {
		return x.RxPauseFor
	}
	return ""
}

func (x *Test) GetPayloadMinBytes() int32 {
	if x != nil {
		return x.PayloadMinBytes
	}
	return 0
}

func (x *Test) GetPayloadMaxBytes() int32 {
	if x != nil {
		return x.PayloadMaxBytes
	}
	return 0
}

func (x *Test) GetLatencyFrequency() int32 {
	if x != nil {
		return x.LatencyFrequency
	}
	return 0
}

func (x *Test) GetTxBlockType() string {
	if x != nil {
		return x.TxBlockType
	}
	return ""
}

func (x *Test) GetRxBlockType() string {
	if x != nil {
		return x.RxBlockType
	}
	return ""
}

func (x *Test) GetRxSeqBlockSize() int32 {
	if x != nil {
		return x.RxSeqBlockSize
	}
	return 0
}

func (x *Test) GetRxPacing() string {
	if x != nil {
		return x.RxPacing
	}
	return ""
}

func (x *Test) GetRxMaxJitter() string {
	if x != nil {
		return x.RxMaxJitter
	}
	return ""
}

var File_loop4_proto protoreflect.FileDescriptor

var file_loop4_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x6f, 0x6f, 0x70, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x34, 0x2e, 0x70, 0x62, 0x22, 0x86, 0x05, 0x0a,
	0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x50,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78, 0x50,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x78, 0x4d, 0x61, 0x78, 0x4a, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x78, 0x4d, 0x61,
	0x78, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x78, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x78, 0x50, 0x61, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x78, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x78, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x78, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x74, 0x78, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x78,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x78, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x78, 0x50, 0x61, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x78, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x78, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x69, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x4d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x78, 0x53, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x78, 0x53, 0x65, 0x71, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x78, 0x50, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x78, 0x50, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x78, 0x4d, 0x61, 0x78, 0x4a, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x78, 0x4d, 0x61, 0x78, 0x4a,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x7a, 0x69, 0x74, 0x69, 0x2f, 0x7a, 0x69, 0x74,
	0x69, 0x2f, 0x7a, 0x69, 0x74, 0x69, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x7a, 0x69, 0x74, 0x69, 0x2d,
	0x74, 0x65, 0x73, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x2f, 0x6c, 0x6f, 0x6f, 0x70,
	0x34, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x34, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_loop4_proto_rawDescOnce sync.Once
	file_loop4_proto_rawDescData = file_loop4_proto_rawDesc
)

func file_loop4_proto_rawDescGZIP() []byte {
	file_loop4_proto_rawDescOnce.Do(func() {
		file_loop4_proto_rawDescData = protoimpl.X.CompressGZIP(file_loop4_proto_rawDescData)
	})
	return file_loop4_proto_rawDescData
}

var file_loop4_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_loop4_proto_goTypes = []interface{}{
	(*Test)(nil), // 0: ziti.loop4.pb.Test
}
var file_loop4_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_loop4_proto_init() }
func file_loop4_proto_init() {
	if File_loop4_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_loop4_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loop4_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_loop4_proto_goTypes,
		DependencyIndexes: file_loop4_proto_depIdxs,
		MessageInfos:      file_loop4_proto_msgTypes,
	}.Build()
	File_loop4_proto = out.File
	file_loop4_proto_rawDesc = nil
	file_loop4_proto_goTypes = nil
	file_loop4_proto_depIdxs = nil
}
